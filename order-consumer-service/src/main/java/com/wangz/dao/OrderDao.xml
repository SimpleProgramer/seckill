<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangz.dao.OrderDao">
  <resultMap id="BaseResultMap" type="com.wangz.entity.Order">
    <id column="order_order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_product_id" jdbcType="BIGINT" property="productId" />
    <result column="order_seckill_id" jdbcType="BIGINT" property="seckillId" />
    <result column="order_total_fee" jdbcType="INTEGER" property="totalFee" />
    <result column="order_pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="order_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="order_update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order_order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="order_delete_status" jdbcType="INTEGER" property="deleteStatus" />
    <result column="order_delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order.order_id as order_order_id, order.user_id as order_user_id, order.product_id as order_product_id, 
    order.seckill_id as order_seckill_id, order.total_fee as order_total_fee, order.pay_time as order_pay_time, 
    order.create_time as order_create_time, order.update_time as order_update_time, order.order_status as order_order_status, 
    order.delete_status as order_delete_status, order.delete_time as order_delete_time
  </sql>
  <select id="selectByExample" parameterType="com.wangz.entity.example.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="fromRowNum != null and toRowNum >= 0">
      limit #{fromRowNum}, #{toRowNum}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order order
    where order.order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wangz.entity.example.OrderExample">
    delete from t_order order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wangz.entity.Order">
    insert into t_order (order_id, user_id, product_id, 
      seckill_id, total_fee, pay_time, 
      create_time, update_time, order_status, 
      delete_status, delete_time)
    values (#{orderId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{seckillId,jdbcType=BIGINT}, #{totalFee,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=INTEGER}, 
      #{deleteStatus,jdbcType=INTEGER}, #{deleteTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wangz.entity.Order">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="seckillId != null">
        seckill_id,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="seckillId != null">
        #{seckillId,jdbcType=BIGINT},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wangz.entity.example.OrderExample" resultType="java.lang.Long">
    select count(*) from t_order order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order order
    <set>
      <if test="record.orderId != null">
        order.order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        order.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        order.product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.seckillId != null">
        order.seckill_id = #{record.seckillId,jdbcType=BIGINT},
      </if>
      <if test="record.totalFee != null">
        order.total_fee = #{record.totalFee,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null">
        order.pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        order.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        order.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderStatus != null">
        order.order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deleteStatus != null">
        order.delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deleteTime != null">
        order.delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order order
    set order.order_id = #{record.orderId,jdbcType=BIGINT},
      order.user_id = #{record.userId,jdbcType=BIGINT},
      order.product_id = #{record.productId,jdbcType=BIGINT},
      order.seckill_id = #{record.seckillId,jdbcType=BIGINT},
      order.total_fee = #{record.totalFee,jdbcType=INTEGER},
      order.pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      order.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      order.order_status = #{record.orderStatus,jdbcType=INTEGER},
      order.delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      order.delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangz.entity.Order">
    update t_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="seckillId != null">
        seckill_id = #{seckillId,jdbcType=BIGINT},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangz.entity.Order">
    update t_order
    set user_id = #{userId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      seckill_id = #{seckillId,jdbcType=BIGINT},
      total_fee = #{totalFee,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>